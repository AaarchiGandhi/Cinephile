{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data.service\";\nimport * as i2 from \"../services/http.service\";\nimport * as i3 from \"../services/authentication.service\";\nimport * as i4 from \"../services/snackbar.service\";\nimport * as i5 from \"@angular/common\";\nfunction SearchResultsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 2);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function SearchResultsComponent_div_3_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addToFavourites(movie_r1));\n    });\n    i0.ɵɵtext(13, \"Add To Favourites\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Title : \", movie_r1.title, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"https://image.tmdb.org/t/p/w185/\", movie_r1.poster_path, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Overview : \", movie_r1.overview, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Vote : \", movie_r1.vote_average, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Genre : \", ctx_r0.getGenreFromIds(movie_r1.genre_ids), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Release Date : \", movie_r1.release_date, \"\");\n  }\n}\nexport let SearchResultsComponent = /*#__PURE__*/(() => {\n  class SearchResultsComponent {\n    constructor(dataService, httpService, authService, snackbarService) {\n      this.dataService = dataService;\n      this.httpService = httpService;\n      this.authService = authService;\n      this.snackbarService = snackbarService;\n      this.movies = [];\n    }\n    ngOnInit() {\n      this.dataService.movieNameSubject.subscribe(data => {\n        this.movieName = data;\n      }, error => {\n        console.log(error.message);\n      });\n      this.httpService.getGenres().subscribe(data => {\n        this.genres = data.genres;\n        console.log(this.genres);\n        this.dataService.moviesSubject.subscribe(data => {\n          console.log('Search results component :', data);\n          this.movies = data;\n        }, error => {\n          console.log(error.message);\n        });\n      }, error => {\n        console.log(error.message);\n      });\n    }\n    addToFavourites(movie) {\n      if (this.authService.isAuthenticated() === false) {\n        this.snackbarService.showSnackBar('User not authenticated', 'Please login first');\n        return;\n      }\n      this.httpService.getFavourites(this.authService.getUsername()).subscribe(data => {\n        let found = data.find(m => m.id === movie.id);\n        if (found) {\n          this.snackbarService.showSnackBar('Already added', '');\n          return;\n        } else {\n          this.httpService.addMovieToFavourites(this.authService.getUsername(), movie).subscribe(result => {\n            console.log(result);\n            this.snackbarService.showSnackBar('Added to favourites', '');\n          }, error => {\n            console.log(error.message);\n          });\n        }\n      }, error => {\n        console.log(error.message);\n      });\n    }\n    getGenreFromIds(arrGenre) {\n      // console.log('Num', this.num);\n      // this.num++;\n      let strArr = [];\n      if (arrGenre.length === 0) {\n        strArr.push('null');\n        return strArr;\n      }\n      arrGenre.forEach(item => {\n        let foundGenre = this.genres.find(val => val.id === item);\n        if (foundGenre) {\n          strArr.push(foundGenre.name);\n        }\n      });\n      console.log(strArr);\n      return strArr;\n    }\n    static #_ = this.ɵfac = function SearchResultsComponent_Factory(t) {\n      return new (t || SearchResultsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.SnackbarService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SearchResultsComponent,\n      selectors: [[\"app-search-results\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[\"style\", \"border: 1px solid black;\", 4, \"ngFor\", \"ngForOf\"], [2, \"border\", \"1px solid black\"], [\"alt\", \"\", 3, \"src\"], [3, \"click\"]],\n      template: function SearchResultsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"main\")(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, SearchResultsComponent_div_3_Template, 14, 6, \"div\", 0);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Showing results for : \", ctx.movieName, \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n        }\n      },\n      dependencies: [i5.NgForOf]\n    });\n  }\n  return SearchResultsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}